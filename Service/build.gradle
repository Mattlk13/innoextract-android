buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.17"
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'org.jetbrains.dokka'
apply from: 'versioning.gradle'


project.ext.version = "1.1.1"
version project.ext.version
group "uk.co.armedpineapple.innoextract"
archivesBaseName = "service"

ext.anko_version='0.10.4'

android {
    compileSdkVersion 27
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 27
        versionName project.ext.version
        versionCode buildVersionCode()

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"


        ndk {
            abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildToolsVersion '27.0.3'

    lintOptions {
        abortOnError false
    }

    externalNativeBuild {
        ndkBuild {
            path 'jni/Android.mk'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'joda-time:joda-time:2.9.9'
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation  "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}
repositories {
    mavenCentral()
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from dokkaJavadoc.getOutputDirectory()
}

artifacts {
    archives javadocJar
    archives sourcesJar
}


install {
    repositories.mavenInstaller {
        pom.project {
            name "service"
            groupId "uk.co.armedpineapple.innoextract"
            artifactId "service"
            version project.ext.version
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')

    // jFrog plugin must be declared for this line to work
    configurations = ['archives']
    // Package info for BinTray
    pkg {
        repo = "innoextract-android"
        name = "service"
        userOrg = user
        licenses = ['MIT']
        vcsUrl = 'https://github.com/alanwoolley/innoextract.git'
        version {
            name = project.ext.version
        }
    }
}
